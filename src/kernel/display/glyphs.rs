pub fn get_glyph(c: char) -> &'static [u8] {
    match c {
        '0' => &ZERO,
        '1' => &ONE,
        '2' => &TWO,
        '3' => &THREE,
        '4' => &FOUR,
        '5' => &FIVE,
        '6' => &SIX,
        '7' => &SEVEN,
        '8' => &EIGHT,
        '9' => &NINE,
        'A' | 'a' => &A,
        'B' | 'b' => &B,
        'C' | 'c' => &C,
        'D' | 'd' => &D,
        'E' | 'e' => &E,
        'F' | 'f' => &F,
        'G' | 'g' => &G,
        'H' | 'h' => &H,
        'I' | 'i' => &I,
        'J' | 'j' => &J,
        'K' | 'k' => &K,
        'L' | 'l' => &L,
        'M' | 'm' => &M,
        'N' | 'n' => &N,
        'O' | 'o' => &O,
        'P' | 'p' => &P,
        'R' | 'r' => &R,
        'S' | 's' => &S,
        'T' | 't' => &T,
        'U' | 'u' => &U,
        'W' | 'w' => &W,
        'X' | 'x' => &X,
        'Y' | 'y' => &Y,
        'Z' | 'z' => &Z,
        _ => &MISSING,
    }
}

pub fn get_glyph_width(c: char) -> i32 {
    match c {
        'i' | 'I' | ' ' => 2,
        'l' | 'L' => 4,
        'm' | 'M' | 't' | 'T' | 'w' | 'W' | 'x' | 'X' | 'y' | 'Y' => 6,
        _ => 5,
    }
}

#[rustfmt::skip]
static ZERO: [u8; 25] = [
    0,1,1,0,0,
    1,0,0,1,0,
    1,0,0,1,0,
    1,0,0,1,0,
    0,1,1,0,0,
];

#[rustfmt::skip]
static ONE: [u8; 25] = [
    0,0,1,0,0,
    0,1,1,0,0,
    0,0,1,0,0,
    0,0,1,0,0,
    0,0,1,0,0,
];

#[rustfmt::skip]
static TWO: [u8; 25] = [
    0,1,1,0,0,
    1,0,0,1,0,
    0,0,1,0,0,
    0,1,0,0,0,
    1,1,1,1,0,
];

#[rustfmt::skip]
static THREE: [u8; 25] = [
    0,1,1,0,0,
    1,0,0,1,0,
    0,0,1,0,0,
    1,0,0,1,0,
    0,1,1,0,0,
];

#[rustfmt::skip]
static FOUR: [u8; 25] = [
    1,0,0,0,0,
    1,0,1,0,0,
    1,1,1,1,0,
    0,0,1,0,0,
    0,0,1,0,0,
];

#[rustfmt::skip]
static FIVE: [u8; 25] = [
    1,1,1,1,0,
    1,0,0,0,0,
    1,1,1,0,0,
    0,0,0,1,0,
    1,1,1,0,0,
];

#[rustfmt::skip]
static SIX: [u8; 25] = [
    0,1,1,0,0,
    1,0,0,0,0,
    1,1,1,0,0,
    1,0,0,1,0,
    0,1,1,0,0,
];

#[rustfmt::skip]
static SEVEN: [u8; 25] = [
    1,1,1,1,0,
    0,0,0,1,0,
    0,0,1,0,0,
    0,1,0,0,0,
    0,1,0,0,0,
];

#[rustfmt::skip]
static EIGHT: [u8; 25] = [
    0,1,1,0,0,
    1,0,0,1,0,
    0,1,1,0,0,
    1,0,0,1,0,
    0,1,1,0,0,
];

#[rustfmt::skip]
static NINE: [u8; 25] = [
    0,1,1,0,0,
    1,0,0,1,0,
    0,1,1,1,0,
    0,0,0,1,0,
    0,1,1,0,0,
];

#[rustfmt::skip]
static A: [u8; 25] = [
    0,1,1,0,0,
    1,0,0,1,0,
    1,1,1,1,0,
    1,0,0,1,0,
    1,0,0,1,0,
];

#[rustfmt::skip]
static B: [u8; 25] = [
    1,1,1,0,0,
    1,0,0,1,0,
    1,1,1,0,0,
    1,0,0,1,0,
    1,1,1,0,0,
];

#[rustfmt::skip]
static C: [u8; 25] = [
    0,1,1,0,0,
    1,0,0,1,0,
    1,0,0,0,0,
    1,0,0,1,0,
    0,1,1,0,0,
];

#[rustfmt::skip]
static D: [u8; 25] = [
    1,1,1,0,0,
    1,0,0,1,0,
    1,0,0,1,0,
    1,0,0,1,0,
    1,1,1,0,0,
];

#[rustfmt::skip]
static E: [u8; 25] = [
    1,1,1,1,0,
    1,0,0,0,0,
    1,1,1,0,0,
    1,0,0,0,0,
    1,1,1,1,0,
];

#[rustfmt::skip]
static F: [u8; 25] = [
    1,1,1,1,0,
    1,0,0,0,0,
    1,1,1,0,0,
    1,0,0,0,0,
    1,0,0,0,0,
];

#[rustfmt::skip]
static G: [u8; 25] = [
    0,1,1,1,0,
    1,0,0,0,0,
    1,0,1,1,0,
    1,0,0,1,0,
    0,1,1,0,0,
];

#[rustfmt::skip]
static H: [u8; 25] = [
    1,0,0,1,0,
    1,0,0,1,0,
    1,1,1,1,0,
    1,0,0,1,0,
    1,0,0,1,0,
];

#[rustfmt::skip]
static I: [u8; 25] = [
    1,0,0,0,0,
    1,0,0,0,0,
    1,0,0,0,0,
    1,0,0,0,0,
    1,0,0,0,0,
];

#[rustfmt::skip]
static J: [u8; 25] = [
    1,1,1,1,0,
    0,0,0,1,0,
    0,0,0,1,0,
    1,0,0,1,0,
    0,1,1,0,0,
];

#[rustfmt::skip]
static K: [u8; 25] = [
    1,0,0,1,0,
    1,0,1,0,0,
    1,1,0,0,0,
    1,0,1,0,0,
    1,0,0,1,0,
];

#[rustfmt::skip]
static L: [u8; 25] = [
    1,0,0,0,0,
    1,0,0,0,0,
    1,0,0,0,0,
    1,0,0,0,0,
    1,1,1,0,0,
];

#[rustfmt::skip]
static M: [u8; 25] = [
    1,0,0,0,1,
    1,1,0,1,1,
    1,0,1,0,1,
    1,0,0,0,1,
    1,0,0,0,1,
];

#[rustfmt::skip]
static N: [u8; 25] = [
    1,0,0,1,0,
    1,1,0,1,0,
    1,0,1,1,0,
    1,0,0,1,0,
    1,0,0,1,0,
];

#[rustfmt::skip]
static O: [u8; 25] = [
    0,1,1,0,0,
    1,0,0,1,0,
    1,0,0,1,0,
    1,0,0,1,0,
    0,1,1,0,0,
];

#[rustfmt::skip]
static P: [u8; 25] = [
    1,1,1,0,0,
    1,0,0,1,0,
    1,1,1,0,0,
    1,0,0,0,0,
    1,0,0,0,0,
];

#[rustfmt::skip]
static R: [u8; 25] = [
    1,1,1,0,0,
    1,0,0,1,0,
    1,1,1,0,0,
    1,0,1,0,0,
    1,0,0,1,0,
];

#[rustfmt::skip]
static S: [u8; 25] = [
    0,1,1,1,0,
    1,0,0,0,0,
    0,1,1,0,0,
    0,0,0,1,0,
    1,1,1,0,0,
];

#[rustfmt::skip]
static T: [u8; 25] = [
    1,1,1,1,1,
    0,0,1,0,0,
    0,0,1,0,0,
    0,0,1,0,0,
    0,0,1,0,0,
];

#[rustfmt::skip]
static U: [u8; 25] = [
    1,0,0,1,0,
    1,0,0,1,0,
    1,0,0,1,0,
    1,0,0,1,0,
    0,1,1,0,0,
];

#[rustfmt::skip]
static W: [u8; 25] = [
    1,0,0,0,1,
    1,0,0,0,1,
    1,0,0,0,1,
    1,0,1,0,1,
    0,1,0,1,0,
];

#[rustfmt::skip]
static X: [u8; 25] = [
    1,0,0,0,1,
    0,1,0,1,0,
    0,0,1,0,0,
    0,1,0,1,0,
    1,0,0,0,1,
];

#[rustfmt::skip]
static Y: [u8; 25] = [
    1,0,0,0,1,
    0,1,0,1,0,
    0,0,1,0,0,
    0,0,1,0,0,
    0,0,1,0,0,
];

#[rustfmt::skip]
static Z: [u8; 25] = [
    1,1,1,1,0,
    0,0,0,1,0,
    0,0,1,0,0,
    0,1,0,0,0,
    1,1,1,1,0,
];

#[rustfmt::skip]
static MISSING: [u8; 25] = [
    1,1,1,1,0,
    1,0,0,1,0,
    1,0,0,1,0,
    1,0,0,1,0,
    1,1,1,1,0,
];
